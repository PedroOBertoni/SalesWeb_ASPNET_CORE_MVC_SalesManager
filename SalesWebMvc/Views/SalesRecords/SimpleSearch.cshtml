@model IEnumerable<SalesWebMvc.Models.SalesRecord>

@{
    ViewData["Title"] = "Busca Simples";
}

<a asp-action="IndexSimpleSearch" class="btn-back">
    <img src="~/images/voltar.png" alt="Voltar a Tela Anterior" />
</a>

<br />
<h2 class="title-white">Total Geral de Vendas: @Model.Sum(obj => obj.Amount).ToString("F2")</h2>
<br />

<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title">Vendas Totais = @Model.Sum(obj => obj.Amount).ToString("F2")</h3>
    </div>
    <div class="panel-body">
        <table class="table table-striped table-hover">
            <thead>
                <tr class="success">
                    <th>Id</th>
                    <th>Data</th>
                    <th>Vendedor</th>
                    <th>Departamento</th>
                    <th>Valor</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    var statusClass = item.Status.ToString().ToLower() switch
                    {
                        "cancelada" => "status-cancelada",
                        "pendente" => "status-pendente",
                        "finalizada" => "status-finalizada",
                        _ => ""
                    };

                    <tr>
                        <td>@item.Id</td>
                        <td>@item.Date.ToString("dd/MM/yyyy")</td>
                        <td>@item.Seller.Name</td>
                        <td>@item.Seller.Department.Name</td>
                        <td>@item.Amount.ToString("F2")</td>
                        <td class="@statusClass">@item.Status</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @if (Model != null && Model.Any())
    {
        <br />
        <h3>Gráfico de Vendas por Mês</h3>
        <canvas id="graficoVendas" width="800" height="400"></canvas>
    }
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const vendasPorMes = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(
            Model
                .GroupBy(v => new { v.Date.Year, v.Date.Month })
                .OrderBy(g => g.Key.Year).ThenBy(g => g.Key.Month)
                .Select(g => new
                {
        Mes = $"{g.Key.Month:D2}/{g.Key.Year}",
        Total = g.Sum(v => v.Amount)
                })
        ));

            const ctx = document.getElementById('graficoVendas')?.getContext('2d');
            if (!ctx) return;

            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: vendasPorMes.map(v => v.Mes),
                    datasets: [{
                        label: 'Total de Vendas (R$)',
                        data: vendasPorMes.map(v => v.Total),
                        backgroundColor: 'rgba(0, 224, 224, 0.5)',
                        borderColor: 'rgba(0, 224, 224, 1)',
                        borderWidth: 1,
                        borderRadius: 6
                    }]
                },
                options: {
                    responsive: true,
                    indexAxis: 'y',
                    plugins: {
                        legend: {
                            labels: {
                                color: '#aaaaaa',
                                font: { size: 14 }
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function (context) {
                                    return 'R$ ' + context.raw.toFixed(2).replace('.', ',');
                                }
                            },
                            bodyFont: { size: 14 },
                            titleFont: { size: 14 }
                        }
                    },
                    scales: {
                        x: {
                            beginAtZero: true,
                            ticks: {
                                color: '#aaaaaa',
                                font: { size: 14 },
                                callback: function (value) {
                                    return 'R$ ' + value.toLocaleString('pt-BR');
                                }
                            },
                            grid: { color: "rgba(255,255,255,0.1)" }
                        },
                        y: {
                            ticks: {
                                color: '#aaaaaa',
                                font: { size: 14 }
                            },
                            grid: { color: "rgba(255,255,255,0.1)" }
                        }
                    }
                }
            });
        });
    </script>
}